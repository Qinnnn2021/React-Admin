[{"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\index.js":"1","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\App.js":"2","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\admin\\admin.jsx":"3","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\login\\login.jsx":"4","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\api\\index.jsx":"5","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\api\\ajax.js":"6","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\utils\\memoryUtils.js":"7","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\utils\\storageUtils.js":"8","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\components\\left-nav\\index.jsx":"9","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\components\\header\\index.jsx":"10","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\home\\home.jsx":"11","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\category\\category.jsx":"12","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\product.jsx":"13","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\user\\user.jsx":"14","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\role\\role.jsx":"15","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\chars\\bar.jsx":"16","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\chars\\line.jsx":"17","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\chars\\pie.jsx":"18","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\config\\menuConfig.js":"19","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\utils\\dateUtils.js":"20","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\components\\link-button\\index.jsx":"21","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\category\\add-form.jsx":"22","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\category\\update-form.jsx":"23","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\home.jsx":"24","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\add-update.jsx":"25","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\detail.jsx":"26","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\utils\\constants.js":"27","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\pictures-wall.jsx":"28","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\rich-text-editor.jsx":"29","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\role\\add-form.jsx":"30","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\role\\auth-form.jsx":"31","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\user\\user-form.jsx":"32","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\redux\\store.js":"33","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\redux\\reducer.js":"34","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\redux\\action-types.js":"35","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\redux\\actions.js":"36","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\not-found\\not-found.jsx":"37"},{"size":238,"mtime":1613398116035,"results":"38","hashOfConfig":"39"},{"size":490,"mtime":1611133336847,"results":"40","hashOfConfig":"39"},{"size":2336,"mtime":1614070320845,"results":"41","hashOfConfig":"39"},{"size":2803,"mtime":1613439593488,"results":"42","hashOfConfig":"39"},{"size":3946,"mtime":1612514337671,"results":"43","hashOfConfig":"39"},{"size":1348,"mtime":1611229225772,"results":"44","hashOfConfig":"39"},{"size":162,"mtime":1611230117964,"results":"45","hashOfConfig":"39"},{"size":562,"mtime":1611232779057,"results":"46","hashOfConfig":"39"},{"size":5688,"mtime":1613398349831,"results":"47","hashOfConfig":"39"},{"size":3519,"mtime":1613398217923,"results":"48","hashOfConfig":"39"},{"size":304,"mtime":1611468910311,"results":"49","hashOfConfig":"39"},{"size":8432,"mtime":1611655097891,"results":"50","hashOfConfig":"39"},{"size":723,"mtime":1611656215119,"results":"51","hashOfConfig":"39"},{"size":4749,"mtime":1612517987148,"results":"52","hashOfConfig":"39"},{"size":5596,"mtime":1614069347704,"results":"53","hashOfConfig":"39"},{"size":1805,"mtime":1614065753078,"results":"54","hashOfConfig":"39"},{"size":1534,"mtime":1614066455883,"results":"55","hashOfConfig":"39"},{"size":2383,"mtime":1614069702434,"results":"56","hashOfConfig":"39"},{"size":1618,"mtime":1612516357085,"results":"57","hashOfConfig":"39"},{"size":336,"mtime":1611371348428,"results":"58","hashOfConfig":"39"},{"size":198,"mtime":1611376947506,"results":"59","hashOfConfig":"39"},{"size":1155,"mtime":1611562697912,"results":"60","hashOfConfig":"39"},{"size":555,"mtime":1611562343618,"results":"61","hashOfConfig":"39"},{"size":5361,"mtime":1612617927546,"results":"62","hashOfConfig":"39"},{"size":10072,"mtime":1612230482008,"results":"63","hashOfConfig":"39"},{"size":4298,"mtime":1611900061479,"results":"64","hashOfConfig":"39"},{"size":156,"mtime":1611666169114,"results":"65","hashOfConfig":"39"},{"size":4421,"mtime":1612013639382,"results":"66","hashOfConfig":"39"},{"size":2733,"mtime":1612080217956,"results":"67","hashOfConfig":"39"},{"size":792,"mtime":1612155813360,"results":"68","hashOfConfig":"39"},{"size":5665,"mtime":1612257091585,"results":"69","hashOfConfig":"39"},{"size":1889,"mtime":1612514234865,"results":"70","hashOfConfig":"39"},{"size":337,"mtime":1613359344638,"results":"71","hashOfConfig":"39"},{"size":1169,"mtime":1613439681239,"results":"72","hashOfConfig":"39"},{"size":328,"mtime":1613359734136,"results":"73","hashOfConfig":"39"},{"size":1510,"mtime":1613398018976,"results":"74","hashOfConfig":"39"},{"size":695,"mtime":1614070943045,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"66c1d3",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\index.js",[],["154","155"],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\App.js",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\admin\\admin.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\login\\login.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\api\\index.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\api\\ajax.js",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\utils\\memoryUtils.js",[],["156","157"],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\utils\\storageUtils.js",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\components\\left-nav\\index.jsx",["158"],"import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Menu } from 'antd';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nimport logo from '../../assets/imgs/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport {setHeadTitle} from '../../redux/actions'\r\nimport './index.less'\r\n\r\nconst { SubMenu } = Menu;\r\n// 左侧导航的组件\r\n class LeftNav extends Component {\r\n\r\n  // 判断当前登录的用户对item的权限\r\n  hasAuth = (item) => {\r\n    const {key,isPublic} = item\r\n    const menus = this.props.user.role.menus\r\n    // console.log(memoryUtils.user);\r\n    const username = this.props.user.username\r\n    // 如果当前用户是 admin\r\n    // 如果当前item是公开的\r\n    // 如果用户有此 item 的权限: key有没有menus中\r\n    if (username === 'admin' || isPublic || menus.indexOf(key) !== -1) {\r\n      return true\r\n    } else if(item.children) {\r\n      // 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child => menus.indexOf(child.key)!==-1)\r\n    }\r\n    return false\r\n  }\r\n   \r\n  // 定义方法 根据menu 的数据数组生成对应的标签数组\r\n  // 使用map + 递归调用\r\n   getMenuNodes = (menuList) => {\r\n   \r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.map(item => {\r\n      /* \r\n        这里的item的形式如下：\r\n        {\r\n          title: '首页', //菜单标题名称\r\n          key: '/home',  //对应的path\r\n          icon: 'home',  //图标名称\r\n          children: []  可能有也可能没有\r\n        },\r\n      */\r\n\r\n      // 如果当前用户有item对应的权限 才需要显示对应的菜单项\r\n      if (this.hasAuth(item)) {\r\n        if (!item.children) { \r\n\r\n          // 判断item是否是当前对应的item\r\n          if (item.key === path || path.indexOf(item.key)===0) {\r\n            // 更新redux中的headTitle状态\r\n            this.props.setHeadTitle(item.title)\r\n          }\r\n\r\n          return (\r\n            <Menu.Item key={item.key} icon={item.icon}>\r\n              <Link to={item.key} onClick={()=>this.props.setHeadTitle(item.title)}>{item.title}</Link>\r\n            </Menu.Item>\r\n          )\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0 )\r\n          // 如果存在 说明当前item的子列表需要打开\r\n          if (cItem) {this.openKey = item.key}\r\n          return (\r\n            <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n               {/* 递归调用 */}\r\n               {\r\n                this.getMenuNodes(item.children)\r\n              }\r\n            </SubMenu>\r\n          )\r\n        }\r\n      }\r\n     }\r\n    )\r\n  } \r\n\r\n  // 在第一次render() 之前执一次 为第一次render()准备数据（同步的）\r\n  UNSAFE_componentWillMount(){\r\n    //组件初始化时只调用，以后组件更新不调用，整个生命周期只调用一次 \r\n    this.menuNodes =this.getMenuNodes(menuList) \r\n  }\r\n  \r\n//#region\r\n/*   // 定义方法 reduce() + 递归调用\r\n  getMenuNodes = (menuList) => {\r\n    return menuList.reduce((pre,item)=>{\r\n      // 向pre添加 Menu.Item 或者 SubMenu\r\n      if (!item.children) {\r\n        // 添加 Menu.Item\r\n        pre.push(\r\n          (<Menu.Item key={item.key} icon={item.icon}>\r\n            <Link to={item.key}>{item.title}</Link>\r\n          </Menu.Item>)\r\n        )\r\n      } else {\r\n        // 添加 SubMenu\r\n        pre.push((\r\n          <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n            {\r\n              this.getMenuNodes(item.children)\r\n            }\r\n          </SubMenu>\r\n        ))\r\n      }\r\n      return pre\r\n    },[ ])\r\n  } */\r\n  //#endregion\r\n\r\n    render() {\r\n\r\n      // const menuNodes = this.getMenuNodes(menuList)\r\n\r\n      // 得到当前请求的路由路径\r\n      let path = this.props.location.pathname\r\n\r\n      if (path.indexOf('/product')===0) {\r\n        // 说明现在显示 product或者product的子页面\r\n        // 修改path\r\n        path = '/product'\r\n      }\r\n      \r\n      // 得到需要打开菜单项的key\r\n      const openKey = this.openKey\r\n        return (\r\n            <div className=\"left-nav\">\r\n              <Link to=\"/\" className=\"left-nav-header\">\r\n                <img src={logo} alt=\"logo\"/>\r\n                <h1>硅谷后台</h1>\r\n              </Link>\r\n              <Menu\r\n                selectedKeys={[path]}\r\n                defaultOpenKeys={[openKey]}\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n              >\r\n                {/* <Menu.Item key='/home' icon={<DesktopOutlined />}>\r\n                  <Link to='/home'>首页</Link>\r\n                </Menu.Item>\r\n                <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"商品\">\r\n                  <Menu.Item key='/category' icon={<MailOutlined />}><Link to='/category'>品类管理</Link></Menu.Item>\r\n                  <Menu.Item key='/product' icon={<MailOutlined />}><Link to='/product'>商品管理</Link></Menu.Item>\r\n                </SubMenu> */}\r\n\r\n                {/* 根据导入的menuList动态生成菜单导航 */}\r\n                {\r\n                  this.menuNodes\r\n                }\r\n                \r\n              </Menu>\r\n            </div> \r\n          )\r\n    }\r\n}\r\n\r\n// 高阶组件：包装非路由组件 返回一个新的组件 \r\n    // 新的组件会向非路由组件传递三个属性： histroy location match\r\n// export default withRouter(LeftNav)\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {setHeadTitle}\r\n)(withRouter(LeftNav))\r\n","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\components\\header\\index.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\home\\home.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\category\\category.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\product.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\user\\user.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\role\\role.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\chars\\bar.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\chars\\line.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\chars\\pie.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\config\\menuConfig.js",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\utils\\dateUtils.js",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\components\\link-button\\index.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\category\\add-form.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\category\\update-form.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\home.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\add-update.jsx",["159","160"],"import React, { Component } from 'react'\r\nimport {Card,Form,Input,Cascader,Button, message} from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqCategorys,reqAddProduct,reaUpdateProduct} from '../../api/index'\r\nimport PicturesWall from './pictures-wall' \r\nimport RichTextEditor from './rich-text-editor'\r\n\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst {Item} = Form\r\nconst {TextArea} = Input\r\n\r\n/* \r\n  1、子组件调用父组件的方法：\r\n      将父组件的方法以函数属性的形式传递给子组件子组件就可以调用\r\n  \r\n  2、父组件调用子组件的方法：\r\n      在父组件中通过ref得到子组件标签对象(也就是组件对象) 调用其方法 \r\n\r\n*/\r\n\r\n\r\n// Product的添加和更新的子路由组件\r\nexport default class ProductAddUpdate extends Component {\r\n\r\n  formRef = React.createRef();\r\n\r\n  state = {\r\n    options: [],\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    // 创建用来保存ref标识的标签对象的容器\r\n    this.pw = React.createRef()\r\n    this.editor = React.createRef()\r\n  }\r\n\r\n  // 更新options数组\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys 生成options数组\r\n    const options = categorys.map(c => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false,  //不是叶子 即还有其他子集分类\r\n    }))\r\n\r\n    // 如果是一个二级分类商品的更新\r\n    const {isUpdate,product} = this\r\n    const {pCategoryId} = product\r\n    if (isUpdate && pCategoryId !== '0') {\r\n      // 获取相应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map(c=>({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }))\r\n      // 找到当前商品相应的一级option对象\r\n      const targetOption = options.find(option => option.value === pCategoryId)\r\n      // 关联到对应的一级option上\r\n      targetOption.children = childOptions\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({options})\r\n  }\r\n\r\n\r\n  // 用于异步获取一级/二级分类列表 并且显示\r\n  // async函数的返回值就是一个新的promise对象 promise的结果和值由async的结果决定\r\n\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId)\r\n    if (result.status === 0) {\r\n      const categorys = result.data\r\n      // 判断 一级列表还是二级列表\r\n      if (parentId === '0') {\r\n        this.initOptions(categorys)\r\n      } else {\r\n        // 二级列表\r\n        // 返回二级列表 ===> 当前async函数返回的promise就会成功且value为categorys\r\n        return categorys\r\n      }\r\n    }\r\n  }\r\n\r\n  // 定义验证价格的函数\r\n  validatePrice = (rule,value,callback) => {\r\n    if (value * 1 > 0) {\r\n      // callback()  //验证通过\r\n      return Promise.resolve()\r\n    } else {\r\n      // 验证不通过\r\n      // callback('价格必须要大于0！')  会有警告 返回一个promise\r\n      return Promise.reject('价格必须要大于0！')\r\n    }\r\n  }\r\n\r\n  // 用于加载下一级列表的回调函数\r\n  loadData = async selectedOptions => {\r\n    // 得到点击的列表项 即option对象\r\n    const targetOption = selectedOptions[0]\r\n    // 显示loading效果\r\n    targetOption.loading = true\r\n\r\n    // 根据选中的分类 请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 隐藏loading\r\n    targetOption.loading = false\r\n\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      // 说明现在存在二级分类\r\n      // 生成一个二级列表的options单\r\n      const cOptions = subCategorys.map(c=>({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,  \r\n      }))\r\n      // 关联到当前的target.option身上 ===> children\r\n      targetOption.children = cOptions\r\n    } else {\r\n      // 当前选中的列表项没有二级分类\r\n      targetOption.isLeaf = true \r\n    }\r\n    \r\n      // 更新options状态\r\n      this.setState({\r\n        options: [...this.state.options],\r\n      })\r\n  }\r\n\r\n  submit =  () => {\r\n    // 进行表单验证 通过才发送请求\r\n    this.formRef.current.validateFields()\r\n    .then( async values => {\r\n\r\n      // 1、收集数据\r\n      // console.log('values',values);\r\n      const {name,desc,price,categoryIds} = values\r\n      let pCategoryId,categoryId\r\n      if (categoryIds.length === 1) {\r\n        pCategoryId = '0'\r\n        categoryId = categoryIds[0]\r\n      } else {\r\n        pCategoryId = categoryIds[0]\r\n        categoryId = categoryIds[1]\r\n      }\r\n      const imgs= this.pw.current.getImgs()\r\n      const detail = this.editor.current.getDetail()\r\n\r\n      // 封装成product对象\r\n      const product = {name,desc,price,imgs,detail}\r\n      console.log('product',product);\r\n\r\n      /* // 如果是更新需要添加_id\r\n      if (this.isUpdate) {\r\n        product._id = this.product._id\r\n      }\r\n\r\n      // 2、调用接口请求函数去添加/更新\r\n      const result = await reqAddOrUpdateProduct(product)\r\n      console.log(result);\r\n      // 3、根据结果显示\r\n      if (result.status === 0) {\r\n        message.success(`${this.isUpdate ? '更新':'添加'}商品成功！`)\r\n        this.props.history.goBack()\r\n      } else {\r\n        message.error(`${this.isUpdate ? '更新':'添加'}商品失败！`)\r\n      } */\r\n\r\n      let result\r\n      // 如果是更新需要添加_id\r\n      if (this.isUpdate) {\r\n        product._id = this.product._id\r\n        result = await reaUpdateProduct(product)\r\n        if (result.status === 0) {\r\n          message.success(` 更新商品成功！`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`更新商品失败！`)\r\n        }\r\n      } else {\r\n        result = await reqAddProduct(product)\r\n        // console.log('添加',result);   result.status===1\r\n        if (result.status === 0) {\r\n          message.success(` 添加商品成功！`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`添加商品失败！`)\r\n        }\r\n      }\r\n\r\n      \r\n      \r\n\r\n      // alert('提交请求成功')\r\n      // console.log('submitvalue',values);\r\n      // console.log('submit', this.pw.current.getImgs());\r\n      // const imgs= this.pw.current.getImgs()\r\n      // const detail = this.editor.current.getDetail()\r\n      // console.log('submit',imgs,detail);\r\n    })\r\n    .catch(errInfo => {\r\n      console.log('请求提交错误', errInfo);\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategorys('0')  //获取一级列表\r\n  }\r\n\r\n  UNSAFE_componentWillMount(){\r\n    // 如果是添加则会没值 否则有值\r\n    const product = this.props.location.state\r\n    // 保存是否为更新的标识  \r\n    this.isUpdate = !!product  //强制转换为一个布尔值\r\n    // 保存商品 若没有 保存一个空对象 则下面设置初始值则不会报错\r\n    this.product = product || {}\r\n  }\r\n  \r\n  render() {\r\n\r\n      // 指定Item配置对象\r\n      const layout = {\r\n        labelCol: {\r\n          span: 2,   //指定左侧label的宽度\r\n        },\r\n        wrapperCol: {\r\n          span: 8,  //指定右侧包裹的宽度\r\n        },\r\n      }\r\n\r\n      const {isUpdate,product} = this\r\n      const {pCategoryId,categoryId,imgs,detail} = product\r\n      // 用来接收级联分类ID的数组\r\n      const categorys = []\r\n      if (isUpdate) {\r\n        // 商品处于一级分类列表中\r\n        if (pCategoryId === '0') {\r\n          categorys.push(categoryId)\r\n        } else {\r\n          // 商品为二级分类\r\n          categorys.push(pCategoryId)\r\n          categorys.push(categoryId)\r\n        }\r\n      }\r\n\r\n        const title = (\r\n          <span>\r\n            <LinkButton onClick={()=>this.props.history.goBack()}>\r\n              <ArrowLeftOutlined style={{marginRight:10,fontSize:20}}/>\r\n            </LinkButton>\r\n            <span>{isUpdate?'修改商品':'添加商品'}</span>\r\n          </span>\r\n        )\r\n\r\n        return (\r\n          <Card title={title}>\r\n            <Form ref={this.formRef} {...layout}>\r\n              <Item name='name' rules={[\r\n                { required: true, message: '必须输入商品名称' },\r\n                ]} initialValue={product.name} label='商品名称'>\r\n                <Input placeholder='请输入商品名称'/>\r\n              </Item>\r\n              <Item name='desc' initialValue={product.desc} rules={[\r\n                { required: true, message: '必须输入商品描述' },\r\n                ]} label='商品描述'>\r\n                <TextArea placeholder='请输入商品描述' autoSize={{minRows:2,maxRows:5}}/>\r\n              </Item>\r\n              <Item name='price' initialValue={product.price} rules={[\r\n                { required: true, message: '必须输入商品价格' },\r\n                { validator: this.validatePrice}\r\n                ]} label='商品价格'>\r\n                <Input type='number' addonAfter='元' placeholder='请输入商品价格'/>\r\n              </Item>\r\n              <Item name='categoryIds' initialValue={categorys} rules={[{required:true,message: '必须指定商品的分类'},]} label='商品分类'>\r\n                <Cascader\r\n                  placeholder='请指定商品的分类'\r\n                  options={this.state.options}  //需要显示的列表数据数组\r\n                  loadData={this.loadData}   //当选择某个列表项 加载下一级列表的回调\r\n                />\r\n              </Item>\r\n              <Item label='商品图片'>\r\n                <PicturesWall ref={this.pw} imgs={imgs}/>\r\n              </Item>\r\n              <Item label='商品详情' labelCol={{span:2}} wrapperCol={{span: 20}}>\r\n                <RichTextEditor ref={this.editor} detail={detail}/>\r\n              </Item>\r\n              <Item>\r\n                <Button onClick={this.submit} type='primary'>提交</Button>\r\n              </Item>\r\n            </Form>\r\n          </Card>\r\n        )\r\n  }\r\n}\r\n","D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\detail.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\utils\\constants.js",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\pictures-wall.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\product\\rich-text-editor.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\role\\add-form.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\role\\auth-form.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\user\\user-form.jsx",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\redux\\store.js",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\redux\\reducer.js",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\redux\\action-types.js",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\redux\\actions.js",[],"D:\\前端学习资料\\React项目管理\\workspace\\react-admin\\src\\pages\\not-found\\not-found.jsx",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"161","replacedBy":"165"},{"ruleId":"163","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":41,"column":30,"nodeType":"169","messageId":"170","endLine":41,"endColumn":32},{"ruleId":"171","severity":1,"message":"172","line":148,"column":9,"nodeType":"173","messageId":"174","endLine":148,"endColumn":20},{"ruleId":"171","severity":1,"message":"175","line":149,"column":9,"nodeType":"173","messageId":"174","endLine":149,"endColumn":19},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],["176"],["177"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'pCategoryId' is assigned a value but never used.","Identifier","unusedVar","'categoryId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]